type Query {
    getUnitById (id:ID):UnitGraphQlBoundary
    getEmployeeByEmail (email:String):EmployeeGraphQlBoundary
    getUnits (page:Int, size:Int):[UnitGraphQlBoundary]
}

type Mutation {
    addEmployee(unitId:ID, email:String):EmployeeGraphQlBoundary
    addUnit(parentUnitId:ID, newUnitId: ID, newUnitType:String, managerEmail:String):UnitGraphQlBoundary
}

type UnitGraphQlBoundary{
    id:ID
    type:String
    createdTimestamp:String
    manager: String
    employees(page:Int, size:Int):[EmployeeGraphQlBoundary]
    subUnits(page:Int, size:Int):[UnitGraphQlBoundary]
    parentUnit: String
}

type EmployeeGraphQlBoundary{
    email:String
    units(page:Int, size:Int):[UnitGraphQlBoundary]
    manages(page:Int, size:Int):[UnitGraphQlBoundary]
}

